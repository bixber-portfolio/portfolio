# Generated by Django 4.2.11 on 2024-06-15 19:37

from django.db import migrations, models
import django.db.models.deletion
import profiles.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rates', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender_code', models.CharField(blank=True, choices=[(None, 'Выберите Ваш пол:'), ('M', 'Мужской'), ('F', 'Женский')], max_length=1, null=True, verbose_name='Пол')),
                ('bio', models.TextField(blank=True, help_text='Напишите что-нибудь о себе', null=True, verbose_name='О себе')),
                ('birthday_date', models.DateField(help_text='Укажите дату Вашего рождения', validators=[profiles.validators.real_age, profiles.validators.is_teenager], verbose_name='Дата рождения')),
                ('image', models.ImageField(blank=True, height_field='image_height', null=True, upload_to='profiles/images/', verbose_name='Фотография', width_field='image_width')),
                ('image_width', models.PositiveSmallIntegerField(editable=False, null=True, verbose_name='Ширина изображения профиля')),
                ('image_height', models.PositiveSmallIntegerField(editable=False, null=True, verbose_name='Длина изображения профиля')),
                ('telegram_username', models.CharField(blank=True, help_text='Укажите ваш никнейм в мессенджере Telegram без символа "@"', max_length=32, null=True, unique=True, verbose_name='Никнейм в Telegram')),
            ],
            options={
                'verbose_name': 'Профиль студента',
                'verbose_name_plural': 'Профили студентов',
                'db_table': 'student_profile',
                'ordering': ('-birthday_date',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentRateAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата присвоения тарифа')),
            ],
            options={
                'verbose_name': 'Присвоение тарифа',
                'verbose_name_plural': 'Присвоения тарифов',
                'db_table': 'student_rate_assignment',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeacherProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender_code', models.CharField(blank=True, choices=[(None, 'Выберите Ваш пол:'), ('M', 'Мужской'), ('F', 'Женский')], max_length=1, null=True, verbose_name='Пол')),
                ('bio', models.TextField(blank=True, help_text='Напишите что-нибудь о себе', null=True, verbose_name='О себе')),
                ('birthday_date', models.DateField(help_text='Укажите дату Вашего рождения', validators=[profiles.validators.real_age, profiles.validators.is_teenager], verbose_name='Дата рождения')),
                ('image', models.ImageField(blank=True, height_field='image_height', null=True, upload_to='profiles/images/', verbose_name='Фотография', width_field='image_width')),
                ('image_width', models.PositiveSmallIntegerField(editable=False, null=True, verbose_name='Ширина изображения профиля')),
                ('image_height', models.PositiveSmallIntegerField(editable=False, null=True, verbose_name='Длина изображения профиля')),
                ('telegram_username', models.CharField(blank=True, help_text='Укажите ваш никнейм в мессенджере Telegram без символа "@"', max_length=32, null=True, unique=True, verbose_name='Никнейм в Telegram')),
                ('education_level', models.CharField(choices=[(None, 'Выберите Ваш уровень образования:'), ('BGE', 'Основное общее образование'), ('SGE', 'Среднее общее образование'), ('SVE', 'Среднее профессиональное образование'), ('HBE', 'Высшее образование (бакалавриат)'), ('HME', 'Высшее образование (магистратура)'), ('HPE', 'Высшее образование (аспирантура)')], max_length=3, verbose_name='Уровень образования')),
            ],
            options={
                'verbose_name': 'Профиль преподавателя',
                'verbose_name_plural': 'Профили преподавателей',
                'db_table': 'teacher_profile',
                'ordering': ('-birthday_date',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeacherRateAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата присвоения тарифа')),
                ('rate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rates.rate', verbose_name='Тариф')),
                ('teacher_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles.teacherprofile', verbose_name='Профиль преподавателя')),
            ],
            options={
                'verbose_name': 'Присвоение тарифа',
                'verbose_name_plural': 'Присвоения тарифов',
                'db_table': 'teacher_rate_assignment',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='teacherprofile',
            name='rates',
            field=models.ManyToManyField(blank=True, related_name='teacher_rate_profiles', through='profiles.TeacherRateAssignment', to='rates.rate', verbose_name='Тарифы'),
        ),
    ]
